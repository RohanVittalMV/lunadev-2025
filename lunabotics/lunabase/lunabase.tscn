[gd_scene load_steps=23 format=3 uid="uid://daaye0yq685ht"]

[ext_resource type="AudioStream" uid="uid://cephremnedhtp" path="res://addons/kenney_interface_sounds/error_002.wav" id="1_8elqp"]
[ext_resource type="AudioStream" uid="uid://dpp0287wnfjsc" path="res://addons/kenney_interface_sounds/confirmation_002.wav" id="2_5ukd6"]

[sub_resource type="GDScript" id="GDScript_84ikl"]
script/source = "extends HSplitContainer


const LAMBDA := 2.0

var connected := false
var invert_steering := false

var _drive := 0.0

@onready var turbo_button: CheckButton = $MarginContainer/VBoxContainer/VBoxContainer/Button2;


func _ready() -> void:
	connected = Lunabot.is_lunabot_connected()
	Lunabot.connected.connect(func(): connected = true)
	Lunabot.disconnected.connect(func(): connected = false)
	Lunabot.connected.connect($Connected.play)
	Lunabot.disconnected.connect($Disconnected.play)


func _input(event: InputEvent) -> void:
	if event.is_action_pressed(\"Restart\"):
		get_tree().change_scene_to_file(scene_file_path)
	
	elif event.is_action_pressed(\"PlayAudio\"):
		Lunabot.play_audio()
	
	elif event.is_action_released(\"PlayAudio\"):
		Lunabot.pause_audio()


func _on_button_pressed() -> void:
	invert_steering = not invert_steering


func _process(delta: float) -> void:
	var invert := 1.0
	if invert_steering:
		invert = -1
	var new_drive := -(Input.get_action_strength(\"DriveForward\") - Input.get_action_strength(\"DriveBackward\"))
	if turbo_button.button_pressed or Input.is_action_pressed(\"Turbo\"):
		_drive = new_drive
	else:
		_drive = lerp(_drive, new_drive, 1 - exp(-LAMBDA * delta))
	var scaled_drive := _drive
	if Input.is_action_pressed(\"Crawler\"):
		_drive *= 0.2
	Lunabot.send_steering(
		_drive,
		-(Input.get_action_strength(\"SteerRight\") - Input.get_action_strength(\"SteerLeft\")) * 0.4 * invert
	)
"

[sub_resource type="GDScript" id="GDScript_wemvy"]
script/source = "extends Label


func _ready() -> void:
	if Lunabot.is_lunabot_connected():
		text = \"Connected\"
	Lunabot.disconnected.connect(func():
		text = \"Not Connected\"
	)
	Lunabot.connected.connect(func():
		text = \"Connected\"
	)
	Lunabot.network_statistics.connect(
		func(total_bytes: float, ping: int, packet_loss: float, packet_throttle: float):
			text = \"\"\"Total Bytes: %s
Ping: %s
Packet Loss: %s
Packet Throttle: %s\"\"\" % [total_bytes, ping, roundi(packet_loss * 100), roundi(packet_throttle * 100)]
	)
"

[sub_resource type="GDScript" id="GDScript_yu1su"]
script/source = "extends Label


const TOO_LONG := 3.0

var timer := 0.0


func _ready() -> void:
	Lunabot.something_received.connect(func():
		timer = 0
	)


func _process(delta: float) -> void:
	timer += delta
	if timer > 10:
		text = \"Last Received: 10000+ ms\"
	else:
		text = \"Last Received: %s ms\" % [roundi(timer * 1000)]
	var strength := minf(timer, TOO_LONG) / TOO_LONG
	modulate.g = 1.0 - strength
	modulate.r = strength
"

[sub_resource type="GDScript" id="GDScript_hj2mf"]
script/source = "extends Node2D


func _ready() -> void:
	Lunabot.odometry_received.connect(
		func(arm_angle: float, _acceleration: Vector3, _front_elevation: float, _back_elevation: float):
			rotation = - arm_angle
	)
"

[sub_resource type="GDScript" id="GDScript_wek3d"]
script/source = "extends Label


func _ready() -> void:
	Lunabot.odometry_received.connect(
		func(_arm_angle: float, _acceleration: Vector3, front_elevation: float, _back_elevation: float):
			text = str(round(front_elevation)) + \"cm\"
	)


func _process(_delta: float) -> void:
	rotation = - get_parent().get_parent().rotation
"

[sub_resource type="GDScript" id="GDScript_ngrkf"]
script/source = "extends Label


func _ready() -> void:
	Lunabot.odometry_received.connect(
		func(_arm_angle: float, _acceleration: Vector3, _front_elevation: float, back_elevation: float):
			text = str(round(back_elevation)) + \"cm\"
	)


func _process(_delta: float) -> void:
	rotation = - get_parent().get_parent().rotation
"

[sub_resource type="GDScript" id="GDScript_hxrim"]
script/source = "extends Label

func _ready() -> void:
	Lunabot.odometry_received.connect(
		func(arm_angle: float, _acceleration: Vector3, _front_elevation: float, _back_elevation: float):
			text = str(round(rad_to_deg(arm_angle))) + \"°\"
	)


func _process(_delta: float) -> void:
	rotation = - get_parent().rotation
"

[sub_resource type="GDScript" id="GDScript_5rh6e"]
script/source = "extends Button


func _on_pressed() -> void:
	Lunabot.dig_autonomy()
"

[sub_resource type="GDScript" id="GDScript_c7wbp"]
script/source = "extends Button


func _on_pressed() -> void:
	Lunabot.dump_autonomy()
"

[sub_resource type="GDScript" id="GDScript_6ax4a"]
script/source = "extends Button


func _on_button_down() -> void:
	Lunabot.play_audio()


func _on_button_up() -> void:
	Lunabot.pause_audio()
"

[sub_resource type="GDScript" id="GDScript_oxpk2"]
script/source = "extends Button


func _on_pressed() -> void:
	Lunabot.stop_arm()
	Lunabot.stop_autonomy()


func _input(event: InputEvent) -> void:
	if event.is_action_pressed(\"StopAll\"):
		_on_pressed()
"

[sub_resource type="GDScript" id="GDScript_qhq06"]
script/source = "extends Button


func _on_pressed() -> void:
	Lunabot.tilt_bucket_up()


func _on_button_up() -> void:
	Lunabot.stop_tilt_bucket()


func _input(event: InputEvent) -> void:
	if event.is_action_pressed(\"TiltArmUp\"):
		Lunabot.tilt_bucket_up()
	elif event.is_action_released(\"TiltArmUp\"):
		Lunabot.stop_tilt_bucket()
"

[sub_resource type="GDScript" id="GDScript_2xh7u"]
script/source = "extends Button


func _on_pressed() -> void:
	Lunabot.tilt_bucket_down()


func _on_button_up() -> void:
	Lunabot.stop_tilt_bucket()


func _input(event: InputEvent) -> void:
	if event.is_action_pressed(\"TiltArmDown\"):
		Lunabot.tilt_bucket_down()
	elif event.is_action_released(\"TiltArmDown\"):
		Lunabot.stop_tilt_bucket()
"

[sub_resource type="GDScript" id="GDScript_dn1oa"]
script/source = "extends Button


func _on_pressed() -> void:
	Lunabot.lift_arm()


func _on_button_up() -> void:
	Lunabot.stop_lift_arm()


func _input(event: InputEvent) -> void:
	if event.is_action_pressed(\"LiftArm\"):
		Lunabot.lift_arm()
	elif event.is_action_released(\"LiftArm\"):
		Lunabot.stop_lift_arm()
"

[sub_resource type="GDScript" id="GDScript_qbnfj"]
script/source = "extends Button


func _on_pressed() -> void:
	Lunabot.lower_arm()


func _on_button_up() -> void:
	Lunabot.stop_lift_arm()


func _input(event: InputEvent) -> void:
	if event.is_action_pressed(\"LowerArm\"):
		Lunabot.lower_arm()
	elif event.is_action_released(\"LowerArm\"):
		Lunabot.stop_lift_arm()
"

[sub_resource type="GDScript" id="GDScript_amk46"]
script/source = "extends Button


var camera_enabled := true


func _ready() -> void:
	Lunabot.connected.connect(func():
		disabled = false
	)
	Lunabot.disconnected.connect(func():
		disabled = true
	)


func _on_pressed() -> void:
	if camera_enabled:
		Lunabot.disable_camera()
		camera_enabled = false
		text = \"Enable Camera\"
	else:
		Lunabot.enable_camera()
		camera_enabled = true
		text = \"Disable Camera\"
"

[sub_resource type="GDScript" id="GDScript_byehu"]
script/source = "extends GridContainer


var _first_selected := false
var _first_index := 0
var _first_button: Button


func _ready():
	for i in range(6):
		var button := Button.new()
		button.text = str(i + 1)
		button.toggle_mode = true
		button.size_flags_horizontal = Control.SIZE_EXPAND_FILL
		
		button.toggled.connect(
			func(pressed: bool):
				if _first_selected:
					_first_selected = false
					_first_button.button_pressed = false
					button.button_pressed = false
					if pressed:
						Lunabot.swap_camera(_first_index, i)
					else:
						_first_selected = false
				elif pressed:
					_first_selected = true
					_first_index = i
					_first_button = button
		)
		add_child(button)
"

[sub_resource type="Gradient" id="Gradient_j05cb"]
interpolation_mode = 2
offsets = PackedFloat32Array(0, 0.5, 1)
colors = PackedColorArray(1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1)

[sub_resource type="GradientTexture2D" id="GradientTexture2D_lspd7"]
gradient = SubResource("Gradient_j05cb")
fill_from = Vector2(1, 1)

[sub_resource type="GDScript" id="GDScript_aogjq"]
script/source = "extends TextureRect


var driving := false


func _ready() -> void:
	Lunabot.disconnected.connect(func():
		driving = false
		_update()
	)


func _gui_input(event: InputEvent) -> void:
	if !Lunabot.is_lunabot_connected():
		return
	
	if event is InputEventMouseButton:
		if event.pressed and event.button_index == MOUSE_BUTTON_LEFT:
			driving = not driving
			_update()
			accept_event()
		
	elif event is InputEventMouseMotion:
		if !driving:
			return
		var origin := (get_local_mouse_position() / size - Vector2.ONE / 2) * 2
		Lunabot.send_steering(- origin.y, origin.x * 0.4)
		accept_event()


func _on_mouse_exited() -> void:
	if !Lunabot.is_lunabot_connected() or !driving:
		return
	driving = false
	_update()


func _update() -> void:
	if driving:
		mouse_default_cursor_shape = Control.CURSOR_MOVE
		$CenterContainer/Label.text = \"×\"
		warp_mouse(size / 2)
	else:
		mouse_default_cursor_shape = Control.CURSOR_ARROW
		$CenterContainer/Label.text = \"Click to Drive\"
		Lunabot.send_steering(0, 0)
"

[node name="Controller" type="HSplitContainer"]
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
theme_override_constants/autohide = 0
split_offset = 400
script = SubResource("GDScript_84ikl")

[node name="Control" type="Control" parent="."]
layout_mode = 2

[node name="VBoxContainer3" type="VBoxContainer" parent="Control"]
layout_mode = 1
anchors_preset = -1
anchor_right = 1.0
anchor_bottom = 0.65
offset_left = 10.0
offset_top = 10.0

[node name="ImportantData" type="Label" parent="Control/VBoxContainer3"]
layout_mode = 2
size_flags_horizontal = 0
text = "Not Connected"
script = SubResource("GDScript_wemvy")

[node name="LastReceived" type="Label" parent="Control/VBoxContainer3"]
modulate = Color(0, 1, 0, 1)
layout_mode = 2
size_flags_horizontal = 0
text = "Last Received:"
script = SubResource("GDScript_yu1su")

[node name="Panel" type="PanelContainer" parent="Control/VBoxContainer3"]
layout_mode = 2
size_flags_vertical = 3

[node name="HBoxContainer" type="HBoxContainer" parent="Control/VBoxContainer3/Panel"]
layout_mode = 2

[node name="VBoxContainer" type="VBoxContainer" parent="Control/VBoxContainer3/Panel/HBoxContainer"]
custom_minimum_size = Vector2(200, 0)
layout_mode = 2

[node name="CenterContainer" type="CenterContainer" parent="Control/VBoxContainer3/Panel/HBoxContainer/VBoxContainer"]
custom_minimum_size = Vector2(0, 200)
layout_mode = 2
size_flags_horizontal = 3

[node name="Control" type="Control" parent="Control/VBoxContainer3/Panel/HBoxContainer/VBoxContainer/CenterContainer"]
layout_mode = 2

[node name="Node2D" type="Node2D" parent="Control/VBoxContainer3/Panel/HBoxContainer/VBoxContainer/CenterContainer/Control"]
script = SubResource("GDScript_hj2mf")

[node name="Polygon2D" type="Polygon2D" parent="Control/VBoxContainer3/Panel/HBoxContainer/VBoxContainer/CenterContainer/Control/Node2D"]
position = Vector2(-17, -1)
polygon = PackedVector2Array(-58, -31, 45, -31, 97, 24, -58, 24)

[node name="FrontElevation" type="Label" parent="Control/VBoxContainer3/Panel/HBoxContainer/VBoxContainer/CenterContainer/Control/Node2D/Polygon2D"]
offset_left = 75.0
offset_top = 32.0
offset_right = 115.0
offset_bottom = 55.0
text = "0.0"
script = SubResource("GDScript_wek3d")

[node name="BackElevation" type="Label" parent="Control/VBoxContainer3/Panel/HBoxContainer/VBoxContainer/CenterContainer/Control/Node2D/Polygon2D"]
offset_left = -58.0
offset_top = 32.0
offset_right = -18.0
offset_bottom = 55.0
text = "0.0"
script = SubResource("GDScript_ngrkf")

[node name="Marker2D" type="Marker2D" parent="Control/VBoxContainer3/Panel/HBoxContainer/VBoxContainer/CenterContainer/Control/Node2D/Polygon2D"]
position = Vector2(-58, 24)

[node name="Marker2D" type="Marker2D" parent="Control/VBoxContainer3/Panel/HBoxContainer/VBoxContainer/CenterContainer/Control/Node2D/Polygon2D/Marker2D"]
position = Vector2(75, -23)

[node name="Label" type="Label" parent="Control/VBoxContainer3/Panel/HBoxContainer/VBoxContainer/CenterContainer/Control/Node2D"]
modulate = Color(0, 0, 0, 1)
offset_left = -24.0
offset_top = -12.0
offset_right = 26.0
offset_bottom = 12.0
pivot_offset = Vector2(25, 12)
size_flags_horizontal = 4
text = "0.0"
horizontal_alignment = 1
script = SubResource("GDScript_hxrim")

[node name="HBoxContainer" type="HBoxContainer" parent="Control"]
layout_mode = 1
anchors_preset = -1
anchor_top = 0.65
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 0
alignment = 2

[node name="HBoxContainer" type="HBoxContainer" parent="Control/HBoxContainer"]
layout_mode = 2
theme_override_constants/separation = 10

[node name="Button2" type="Button" parent="Control/HBoxContainer/HBoxContainer"]
layout_mode = 2
size_flags_vertical = 4
text = "DIG"
script = SubResource("GDScript_5rh6e")

[node name="Button3" type="Button" parent="Control/HBoxContainer/HBoxContainer"]
layout_mode = 2
size_flags_vertical = 4
text = "DUMP"
script = SubResource("GDScript_c7wbp")

[node name="Button" type="Button" parent="Control/HBoxContainer/HBoxContainer"]
layout_mode = 2
size_flags_vertical = 4
text = "Buzz"
script = SubResource("GDScript_6ax4a")

[node name="VBoxContainer" type="VBoxContainer" parent="Control/HBoxContainer/HBoxContainer"]
layout_mode = 2
alignment = 1

[node name="Button" type="Button" parent="Control/HBoxContainer/HBoxContainer/VBoxContainer"]
layout_mode = 2
text = "STOP"
script = SubResource("GDScript_oxpk2")

[node name="Tilt" type="VBoxContainer" parent="Control/HBoxContainer/HBoxContainer"]
layout_mode = 2

[node name="Label" type="Label" parent="Control/HBoxContainer/HBoxContainer/Tilt"]
layout_mode = 2
text = "Tilt
"
horizontal_alignment = 1

[node name="Button" type="Button" parent="Control/HBoxContainer/HBoxContainer/Tilt"]
layout_mode = 2
text = "UP"
script = SubResource("GDScript_qhq06")

[node name="VSlider" type="VSlider" parent="Control/HBoxContainer/HBoxContainer/Tilt"]
layout_mode = 2
size_flags_horizontal = 4
size_flags_vertical = 3
editable = false

[node name="Button2" type="Button" parent="Control/HBoxContainer/HBoxContainer/Tilt"]
layout_mode = 2
text = "DOWN"
script = SubResource("GDScript_2xh7u")

[node name="Lift" type="VBoxContainer" parent="Control/HBoxContainer/HBoxContainer"]
layout_mode = 2

[node name="Label" type="Label" parent="Control/HBoxContainer/HBoxContainer/Lift"]
layout_mode = 2
text = "Lift"
horizontal_alignment = 1

[node name="Button" type="Button" parent="Control/HBoxContainer/HBoxContainer/Lift"]
layout_mode = 2
text = "UP"
script = SubResource("GDScript_dn1oa")

[node name="VSlider" type="VSlider" parent="Control/HBoxContainer/HBoxContainer/Lift"]
layout_mode = 2
size_flags_horizontal = 4
size_flags_vertical = 3
editable = false

[node name="Button2" type="Button" parent="Control/HBoxContainer/HBoxContainer/Lift"]
layout_mode = 2
text = "DOWN"
script = SubResource("GDScript_qbnfj")

[node name="MarginContainer" type="MarginContainer" parent="."]
layout_mode = 2
theme_override_constants/margin_left = 5
theme_override_constants/margin_top = 10
theme_override_constants/margin_right = 10
theme_override_constants/margin_bottom = 10

[node name="VBoxContainer" type="VBoxContainer" parent="MarginContainer"]
layout_mode = 2

[node name="HBoxContainer" type="HBoxContainer" parent="MarginContainer/VBoxContainer"]
layout_mode = 2
alignment = 1

[node name="EnableCamera" type="Button" parent="MarginContainer/VBoxContainer/HBoxContainer"]
layout_mode = 2
disabled = true
text = "Disable Camera"
script = SubResource("GDScript_amk46")

[node name="VBoxContainer" type="VBoxContainer" parent="MarginContainer/VBoxContainer"]
layout_mode = 2
size_flags_vertical = 3
alignment = 2

[node name="Button" type="Button" parent="MarginContainer/VBoxContainer/VBoxContainer"]
layout_mode = 2
text = "Invert Steering"

[node name="Button2" type="CheckButton" parent="MarginContainer/VBoxContainer/VBoxContainer"]
layout_mode = 2
text = "Turbo"

[node name="Label" type="Label" parent="MarginContainer/VBoxContainer/VBoxContainer"]
layout_mode = 2
text = "Swap Cameras"
horizontal_alignment = 1

[node name="GridContainer" type="GridContainer" parent="MarginContainer/VBoxContainer/VBoxContainer"]
layout_mode = 2
columns = 3
script = SubResource("GDScript_byehu")

[node name="AspectRatioContainer" type="AspectRatioContainer" parent="MarginContainer/VBoxContainer/VBoxContainer"]
layout_mode = 2
size_flags_vertical = 3
alignment_vertical = 2

[node name="TextureRect" type="TextureRect" parent="MarginContainer/VBoxContainer/VBoxContainer/AspectRatioContainer"]
layout_mode = 2
mouse_filter = 0
texture = SubResource("GradientTexture2D_lspd7")
script = SubResource("GDScript_aogjq")

[node name="CenterContainer" type="CenterContainer" parent="MarginContainer/VBoxContainer/VBoxContainer/AspectRatioContainer/TextureRect"]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2

[node name="Label" type="Label" parent="MarginContainer/VBoxContainer/VBoxContainer/AspectRatioContainer/TextureRect/CenterContainer"]
layout_mode = 2
text = "Click to Drive"

[node name="Disconnected" type="AudioStreamPlayer" parent="."]
stream = ExtResource("1_8elqp")

[node name="Connected" type="AudioStreamPlayer" parent="."]
stream = ExtResource("2_5ukd6")

[connection signal="pressed" from="Control/HBoxContainer/HBoxContainer/Button2" to="Control/HBoxContainer/HBoxContainer/Button2" method="_on_pressed"]
[connection signal="pressed" from="Control/HBoxContainer/HBoxContainer/Button3" to="Control/HBoxContainer/HBoxContainer/Button3" method="_on_pressed"]
[connection signal="button_down" from="Control/HBoxContainer/HBoxContainer/Button" to="Control/HBoxContainer/HBoxContainer/Button" method="_on_button_down"]
[connection signal="button_up" from="Control/HBoxContainer/HBoxContainer/Button" to="Control/HBoxContainer/HBoxContainer/Button" method="_on_button_up"]
[connection signal="pressed" from="Control/HBoxContainer/HBoxContainer/VBoxContainer/Button" to="Control/HBoxContainer/HBoxContainer/VBoxContainer/Button" method="_on_pressed"]
[connection signal="button_down" from="Control/HBoxContainer/HBoxContainer/Tilt/Button" to="Control/HBoxContainer/HBoxContainer/Tilt/Button" method="_on_pressed"]
[connection signal="button_up" from="Control/HBoxContainer/HBoxContainer/Tilt/Button" to="Control/HBoxContainer/HBoxContainer/Tilt/Button" method="_on_button_up"]
[connection signal="button_down" from="Control/HBoxContainer/HBoxContainer/Tilt/Button2" to="Control/HBoxContainer/HBoxContainer/Tilt/Button2" method="_on_pressed"]
[connection signal="button_up" from="Control/HBoxContainer/HBoxContainer/Tilt/Button2" to="Control/HBoxContainer/HBoxContainer/Tilt/Button2" method="_on_button_up"]
[connection signal="button_down" from="Control/HBoxContainer/HBoxContainer/Lift/Button" to="Control/HBoxContainer/HBoxContainer/Lift/Button" method="_on_pressed"]
[connection signal="button_up" from="Control/HBoxContainer/HBoxContainer/Lift/Button" to="Control/HBoxContainer/HBoxContainer/Lift/Button" method="_on_button_up"]
[connection signal="button_down" from="Control/HBoxContainer/HBoxContainer/Lift/Button2" to="Control/HBoxContainer/HBoxContainer/Lift/Button2" method="_on_pressed"]
[connection signal="button_up" from="Control/HBoxContainer/HBoxContainer/Lift/Button2" to="Control/HBoxContainer/HBoxContainer/Lift/Button2" method="_on_button_up"]
[connection signal="pressed" from="MarginContainer/VBoxContainer/HBoxContainer/EnableCamera" to="MarginContainer/VBoxContainer/HBoxContainer/EnableCamera" method="_on_pressed"]
[connection signal="pressed" from="MarginContainer/VBoxContainer/VBoxContainer/Button" to="." method="_on_button_pressed"]
[connection signal="pressed" from="MarginContainer/VBoxContainer/VBoxContainer/Button2" to="." method="_on_button_pressed"]
[connection signal="mouse_exited" from="MarginContainer/VBoxContainer/VBoxContainer/AspectRatioContainer/TextureRect" to="MarginContainer/VBoxContainer/VBoxContainer/AspectRatioContainer/TextureRect" method="_on_mouse_exited"]
