[gd_scene load_steps=18 format=3 uid="uid://bxmnthetrtkso"]

[ext_resource type="Script" path="res://robot.gd" id="1_4gibj"]

[sub_resource type="GDScript" id="GDScript_lj4gt"]
script/source = "extends Node3D


func _ready() -> void:
	get_viewport().disable_3d = true
"

[sub_resource type="GDScript" id="GDScript_x4vum"]
script/source = "extends StaticBody3D

const WIDTH := 4.0
const LENGTH := 8.0
const WIDTH_CELLS := 50
const LENGTH_CELLS := 100
const MAX_NOISE_HEIGHT := 0.06
const MAX_HILL_HEIGHT := 0.4


func _ready() -> void:
	var collision_shape: CollisionShape3D = $CollisionShape3D
	var width_scale := WIDTH / (WIDTH_CELLS - 1)
	var length_scale := LENGTH / (LENGTH_CELLS - 1)
	collision_shape.scale.x = width_scale
	collision_shape.scale.z = length_scale
	collision_shape.position.x = - WIDTH / 2
	collision_shape.position.z = - LENGTH / 2
	var heightmap: HeightMapShape3D = collision_shape.shape
	heightmap.map_width = WIDTH_CELLS
	heightmap.map_depth = LENGTH_CELLS
	
	var noise := FastNoiseLite.new()
	noise.seed = randi()
	noise.frequency = 0.3
	
	var hills := FastNoiseLite.new()
	hills.seed = randi()
	hills.frequency = 0.05
	push_warning(\"Using noise seed: %s, hills seed: %s\" % [noise.seed, hills.seed])
	
	for x in range(WIDTH_CELLS):
		for y in range(LENGTH_CELLS):
			heightmap.map_data[x + y * WIDTH_CELLS] = remap(noise.get_noise_2d(x, y), -1, 1, 0, MAX_NOISE_HEIGHT) + remap(hills.get_noise_2d(x, y), -1, 1, 0, MAX_HILL_HEIGHT)
	
	collision_shape.position.y = - heightmap.get_min_height()
	
	var mesh_instance: MeshInstance3D = $MeshInstance3D
	var mesh: ImmediateMesh = mesh_instance.mesh
	mesh.surface_begin(Mesh.PRIMITIVE_TRIANGLE_STRIP)
	
	for y in range(LENGTH_CELLS - 1):
		for x in range(WIDTH_CELLS):
			if y % 2 != 0:
				x = WIDTH_CELLS - x - 1
			var current_height := heightmap.map_data[(WIDTH_CELLS - x - 1) + (LENGTH_CELLS - y - 1) * WIDTH_CELLS]
			var next_height := heightmap.map_data[(WIDTH_CELLS - x - 1) + (LENGTH_CELLS - y - 2) * WIDTH_CELLS]
			var height_diff = next_height - current_height
			var angle := atan2(height_diff, length_scale)
			
			if y % 2 == 0:
				mesh.surface_set_normal(Vector3.DOWN.rotated(Vector3.RIGHT, angle))
			else:
				mesh.surface_set_normal(Vector3.UP.rotated(Vector3.RIGHT, angle))
			
			mesh.surface_add_vertex(Vector3(- x * width_scale, current_height, - y * length_scale))
			mesh.surface_add_vertex(Vector3(- x * width_scale, next_height, - (y + 1) * length_scale))
			
	mesh.surface_end()
	mesh_instance.position.y = collision_shape.position.y
"

[sub_resource type="HeightMapShape3D" id="HeightMapShape3D_s2y32"]

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_501rf"]
cull_mode = 2
albedo_color = Color(0.74558, 0.74558, 0.74558, 1)

[sub_resource type="ImmediateMesh" id="ImmediateMesh_np8a4"]

[sub_resource type="WorldBoundaryShape3D" id="WorldBoundaryShape3D_kxs4p"]

[sub_resource type="PlaneMesh" id="PlaneMesh_twbw0"]
size = Vector2(2, 8)

[sub_resource type="PlaneMesh" id="PlaneMesh_reayg"]
size = Vector2(2, 4)

[sub_resource type="BoxMesh" id="BoxMesh_ho5pm"]
size = Vector3(0.505, 0.6, 0.475)

[sub_resource type="PrismMesh" id="PrismMesh_8fccl"]
size = Vector3(0.29, 0.35, 0.33)

[sub_resource type="PhysicalSkyMaterial" id="PhysicalSkyMaterial_e6mxc"]
energy_multiplier = 2.0

[sub_resource type="Sky" id="Sky_1xo37"]
sky_material = SubResource("PhysicalSkyMaterial_e6mxc")

[sub_resource type="Environment" id="Environment_4hw3w"]
background_mode = 2
sky = SubResource("Sky_1xo37")

[sub_resource type="GDScript" id="GDScript_pnp73"]
script/source = "extends Camera3D


var _timer := LunasimNode.DELTA


func _process(delta: float) -> void:
	_timer -= delta
	if _timer <= 0.0:
		_timer = LunasimNode.DELTA
"

[sub_resource type="GDScript" id="GDScript_4uyte"]
script/source = "extends LineEdit


func _on_text_submitted(new_text: String) -> void:
	if new_text.is_valid_float():
		LunasimNode.set_accelerometer_deviation(float(new_text))
	else:
		push_error(\"Not a valid accelerometer deviation\")
"

[sub_resource type="GDScript" id="GDScript_8qrn1"]
script/source = "extends LineEdit


func _on_text_submitted(new_text: String) -> void:
	if new_text.is_valid_float():
		LunasimNode.set_gyroscope_deviation(float(new_text))
	else:
		push_error(\"Not a valid gyroscope deviation\")
"

[node name="Node3D" type="Node3D"]
script = SubResource("GDScript_lj4gt")

[node name="Floor" type="StaticBody3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0.5, 0, 0.5)
script = SubResource("GDScript_x4vum")

[node name="CollisionShape3D" type="CollisionShape3D" parent="Floor"]
shape = SubResource("HeightMapShape3D_s2y32")

[node name="MeshInstance3D" type="MeshInstance3D" parent="Floor"]
material_override = SubResource("StandardMaterial3D_501rf")
mesh = SubResource("ImmediateMesh_np8a4")

[node name="StaticBody3D" type="StaticBody3D" parent="."]

[node name="CollisionShape3D" type="CollisionShape3D" parent="StaticBody3D"]
transform = Transform3D(-4.37114e-08, 1, 0, -1, -4.37114e-08, 0, 0, 0, 1, -3.5, 0, 0)
shape = SubResource("WorldBoundaryShape3D_kxs4p")

[node name="MeshInstance3D" type="MeshInstance3D" parent="StaticBody3D/CollisionShape3D"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -1, 0, -3.5)
mesh = SubResource("PlaneMesh_twbw0")

[node name="CollisionShape3D2" type="CollisionShape3D" parent="StaticBody3D"]
transform = Transform3D(1.91069e-15, -4.37114e-08, 1, -1, -4.37114e-08, 0, 4.37114e-08, -1, -4.37114e-08, 0, 0, 0.5)
shape = SubResource("WorldBoundaryShape3D_kxs4p")

[node name="MeshInstance3D" type="MeshInstance3D" parent="StaticBody3D/CollisionShape3D2"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -1, 0, -1.5)
mesh = SubResource("PlaneMesh_reayg")

[node name="CollisionShape3D3" type="CollisionShape3D" parent="StaticBody3D"]
transform = Transform3D(-5.73206e-15, 1.31134e-07, -1, -1, -4.37114e-08, 0, -4.37114e-08, 1, 1.31134e-07, 0, 0, -7.5)
shape = SubResource("WorldBoundaryShape3D_kxs4p")

[node name="MeshInstance3D" type="MeshInstance3D" parent="StaticBody3D/CollisionShape3D3"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -1, 0, 1.5)
mesh = SubResource("PlaneMesh_reayg")

[node name="CollisionShape3D4" type="CollisionShape3D" parent="StaticBody3D"]
transform = Transform3D(4.37114e-08, -1, -8.74228e-08, -1, -4.37114e-08, 0, -3.82137e-15, 8.74228e-08, -1, 0.5, 0, 0)
shape = SubResource("WorldBoundaryShape3D_kxs4p")

[node name="MeshInstance3D" type="MeshInstance3D" parent="StaticBody3D/CollisionShape3D4"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -1, 0, 3.5)
mesh = SubResource("PlaneMesh_twbw0")

[node name="Robot" type="Node3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.807798, 0)
script = ExtResource("1_4gibj")

[node name="OriginOnly" type="Node3D" parent="Robot"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.807798, 0)
top_level = true

[node name="CameraPivot" type="Marker3D" parent="Robot/OriginOnly"]
transform = Transform3D(0.93343, -0.220396, -0.283078, 0.229795, 0.973239, 0, 0.275503, -0.0650499, 0.959097, 0, 0.5, 0)

[node name="ExternalView" type="RemoteTransform3D" parent="Robot/OriginOnly/CameraPivot"]
transform = Transform3D(-2.98023e-08, -9.31323e-09, 1, -1.11759e-08, 1, -2.23517e-08, -1, -7.45058e-09, 0, 3.46343, -2.98023e-08, 6.33299e-08)
remote_path = NodePath("../../../../CanvasLayer/TabContainer/ExternalView/SubviewportContainer/SubViewport/ExternalCamera")

[node name="RemoteTransform3D" type="RemoteTransform3D" parent="Robot"]
remote_path = NodePath("../OriginOnly")
update_rotation = false
update_scale = false

[node name="DepthCamera" type="RemoteTransform3D" parent="Robot"]
transform = Transform3D(1, 0, 0, 0, 0.972921, 0.231137, 0, -0.231137, 0.972921, 0, 0.572526, -0.298189)
remote_path = NodePath("../../CanvasLayer/TabContainer/DepthCamera1/SubviewportContainer/SubViewport/DepthCamera")

[node name="RayCast3D" type="RayCast3D" parent="Robot"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.218799, 0)

[node name="MeshInstance3D" type="MeshInstance3D" parent="Robot"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.3, 0)
mesh = SubResource("BoxMesh_ho5pm")

[node name="MeshInstance3D2" type="MeshInstance3D" parent="Robot"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.3, -0.138658)
mesh = SubResource("PrismMesh_8fccl")

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource("Environment_4hw3w")

[node name="DirectionalLight3D" type="DirectionalLight3D" parent="WorldEnvironment"]
transform = Transform3D(0.926909, 0.34775, -0.141101, 0.330633, -0.57883, 0.745411, 0.177544, -0.737581, -0.6515, -2.51144, 3.72433, 0)

[node name="CanvasLayer" type="CanvasLayer" parent="."]

[node name="TabContainer" type="TabContainer" parent="CanvasLayer"]
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
current_tab = 0
tab_focus_mode = 0

[node name="ExternalView" type="MarginContainer" parent="CanvasLayer/TabContainer"]
layout_mode = 2
theme_override_constants/margin_left = 10
theme_override_constants/margin_top = 10
theme_override_constants/margin_right = 10
theme_override_constants/margin_bottom = 10
metadata/_tab_index = 0

[node name="SubviewportContainer" type="SubViewportContainer" parent="CanvasLayer/TabContainer/ExternalView"]
layout_mode = 2
stretch = true

[node name="SubViewport" type="SubViewport" parent="CanvasLayer/TabContainer/ExternalView/SubviewportContainer"]
handle_input_locally = false
size = Vector2i(1132, 597)
render_target_update_mode = 4

[node name="ExternalCamera" type="Camera3D" parent="CanvasLayer/TabContainer/ExternalView/SubviewportContainer/SubViewport"]
transform = Transform3D(0.283078, -0.220396, 0.933431, -1.77252e-08, 0.973239, 0.229795, -0.959097, -0.0650499, 0.275503, 3.23287, 2.10368, 0.954184)

[node name="DepthCamera1" type="MarginContainer" parent="CanvasLayer/TabContainer"]
visible = false
layout_mode = 2
theme_override_constants/margin_left = 10
theme_override_constants/margin_top = 10
theme_override_constants/margin_right = 10
theme_override_constants/margin_bottom = 10
metadata/_tab_index = 1

[node name="SubviewportContainer" type="SubViewportContainer" parent="CanvasLayer/TabContainer/DepthCamera1"]
layout_mode = 2
stretch = true

[node name="SubViewport" type="SubViewport" parent="CanvasLayer/TabContainer/DepthCamera1/SubviewportContainer"]
handle_input_locally = false
size = Vector2i(2, 2)
render_target_update_mode = 0

[node name="DepthCamera" type="Camera3D" parent="CanvasLayer/TabContainer/DepthCamera1/SubviewportContainer/SubViewport"]
transform = Transform3D(1, 0, 0, 0, 0.972921, 0.231137, 0, -0.231137, 0.972921, 0, 1.38032, -0.298189)
fov = 120.0
script = SubResource("GDScript_pnp73")

[node name="Control" type="Control" parent="CanvasLayer"]
layout_mode = 3
anchor_right = 1.0
anchor_bottom = 1.0
offset_left = 10.0
offset_top = 40.0
offset_right = -10.0
offset_bottom = -10.0
grow_horizontal = 2
grow_vertical = 2
metadata/_edit_use_anchors_ = true

[node name="VBoxContainer" type="VBoxContainer" parent="CanvasLayer/Control"]
layout_mode = 1
anchors_preset = -1
anchor_left = 1.0
anchor_right = 1.0
grow_horizontal = 0

[node name="Label" type="Label" parent="CanvasLayer/Control/VBoxContainer"]
layout_mode = 2
text = "Accelerometer Deviation"

[node name="LineEdit" type="LineEdit" parent="CanvasLayer/Control/VBoxContainer"]
layout_mode = 2
text = "0.0"
script = SubResource("GDScript_4uyte")

[node name="Label2" type="Label" parent="CanvasLayer/Control/VBoxContainer"]
layout_mode = 2
text = "Gyroscope Deviation"

[node name="LineEdit2" type="LineEdit" parent="CanvasLayer/Control/VBoxContainer"]
layout_mode = 2
text = "0.0"
script = SubResource("GDScript_8qrn1")

[connection signal="text_submitted" from="CanvasLayer/Control/VBoxContainer/LineEdit" to="CanvasLayer/Control/VBoxContainer/LineEdit" method="_on_text_submitted"]
[connection signal="text_submitted" from="CanvasLayer/Control/VBoxContainer/LineEdit2" to="CanvasLayer/Control/VBoxContainer/LineEdit2" method="_on_text_submitted"]
